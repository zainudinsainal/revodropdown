{"version":3,"file":"revo-list.filter.js","sourceRoot":"","sources":["../../../src/components/list/revo-list.filter.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAElC,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAgBxD,SAAS,QAAQ,CAAC,CAAQ,EAAE,GAAY;;IACtC,IAAI,SAAS,GAAG,EAAE,CAAC;IACnB,MAAM,WAAW,GAAG,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,EAAE,0CAAE,iBAAiB,EAAE,CAAC;IACrD,IAAI,CAAC,WAAW,EAAE,CAAC;QACjB,SAAS,GAAG,CAAC,CAAC,MAAM,CAAC;IACvB,CAAC;SAAM,CAAC;QACN,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;YAC1B,IAAI,GAAG,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;YAC1C,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,CAAC;gBAC5B,GAAG,GAAG,GAAG,CAAC,iBAAiB,EAAE,CAAC;gBAC9B,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;oBACjB,KAAK,OAAO;wBACV,IAAI,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;4BACnC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACvB,CAAC;wBACD,MAAM;oBACR;wBACE,IAAI,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;4BAClC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACvB,CAAC;wBACD,MAAM;gBACV,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,CAAQ,EAAE,EAAE;IAC7C,MAAM,YAAY,GAAG,CAAC,KAAc,EAAE,EAAE;QACtC,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;IACrC,CAAC,CAAC;IAEF,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;QACd,CAAC,CAAC,MAAM,GAAG,UAAU,CAAC;IACxB,CAAC;IACD,YAAY,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;IAC5B,IAAI,CAAC,CAAC,YAAY,EAAE,CAAC;QACnB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,WAAW,CAAC;IAC1B,CAAC;IACD,OAAO,CACL,2BAAO,KAAK,EAAE,EAAE,YAAY,EAAE,IAAI,GAAG,EAAE,IAAI,EAAC,MAAM,IAC5C,CAAC,IACL,OAAO,EAAE,CAAC,CAAC,EAAE;YACX,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC,EACD,OAAO,EAAE,CAAC,CAAC,EAAE;;YACX,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;YACzB,MAAM,KAAK,GAAG,MAAC,CAAC,CAAC,aAAkC,0CAAE,KAAK,CAAC;YAC3D,YAAY,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC,IACD,CACH,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { h } from '@stencil/core';\nimport { JSXBase } from '@stencil/core/internal';\nimport { getItemLabel } from '../../utils/item.helpers';\n\ninterface Props extends JSXBase.DOMAttributes<any> {\n  value?: string;\n  filterValue?: string;\n  source: any[];\n  dataLabel?: string;\n  filter?: 'contains' | 'start';\n  autocomplete?: string;\n  ref?(e: HTMLInputElement): void;\n  onInput?(): void;\n  onFocus?(): void;\n  onClick?(e: MouseEvent): void;\n  onFilterChange(e: { value?: string; items: any[] }): void;\n}\n\nfunction doFilter(p: Props, val?: string) {\n  let newSource = [];\n  const filterValue = val?.trim()?.toLocaleLowerCase();\n  if (!filterValue) {\n    newSource = p.source;\n  } else {\n    for (let item of p.source) {\n      let val = getItemLabel(item, p.dataLabel);\n      if (typeof val === 'string') {\n        val = val.toLocaleLowerCase();\n        switch (p.filter) {\n          case 'start':\n            if (val.indexOf(filterValue) === 0) {\n              newSource.push(item);\n            }\n            break;\n          default:\n            if (val.indexOf(filterValue) > -1) {\n              newSource.push(item);\n            }\n            break;\n        }\n      }\n    }\n  }\n  return newSource;\n}\n\nexport const DropdownListFilter = (p: Props) => {\n  const filterChange = (value?: string) => {\n    const items = doFilter(p, value);\n    p.onFilterChange({ value, items });\n  };\n\n  if (!p.filter) {\n    p.filter = 'contains';\n  }\n  filterChange(p.filterValue);\n  if (p.autocomplete) {\n    p.value = p.filterValue;\n  }\n  return (\n    <input class={{ 'filter-box': true, }} type=\"text\"\n      {...p}\n      onClick={e => {\n        e.preventDefault();\n        p.onClick && p.onClick(e);\n      }}\n      onInput={e => {\n        p.onInput && p.onInput();\n        const value = (e.currentTarget as HTMLInputElement)?.value;\n        filterChange(value);\n      }}\n    />\n  );\n};\n"]}